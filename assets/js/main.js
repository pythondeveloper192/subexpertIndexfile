!function (e) { "use strict"; e('.header-menu a[href="#"]').on("click", function (e) { e.preventDefault() }), e(".main-menu").menumaker({ title: "<span></span>", format: "multitoggle" }), e(e(window)).on("scroll", function () { e("ul.nav").hasClass("open") || e("#menu-button").removeClass("menu-opened") }), e(window).on("scroll", function () { e(window).scrollTop() < 100 ? e(".header-main.style--one").removeClass("sticky fadeInDown animated") : e(".header-main.style--one").addClass("sticky fadeInDown animated") }), e(".offcanvas-trigger").on("click", function () { e(".offcanvas-wrapper").addClass("active"), e(".offcanvas-overlay").addClass("show") }), e(".offcanvas-overlay,.offcanvas-close").on("click", function () { e(".offcanvas-overlay").removeClass("show"), e(".offcanvas-wrapper").removeClass("active") }), e("[data-bg-img]").css("background-image", function () { return 'url("' + e(this).data("bg-img") + '")' }).removeAttr("data-bg-img").addClass("bg-img"); var t = function (e, t) { return void 0 === e ? t : e }; e(".owl-carousel").each(function () { var a = e(this); a.owlCarousel({ items: t(a.data("owl-items"), 1), margin: t(a.data("owl-margin"), 0), loop: t(a.data("owl-loop"), !0), smartSpeed: 450, autoplay: t(a.data("owl-autoplay"), !0), autoplayTimeout: t(a.data("owl-speed"), 8e3), center: t(a.data("owl-center"), !1), animateIn: t(a.data("owl-animate-in"), !1), animateOut: t(a.data("owl-animate-out"), !1), nav: t(a.data("owl-nav"), !1), navText: ['<img src="assets/img/icons/angle-left.svg" class="svg">', '<img src="assets/img/icons/angle-right.svg" class="svg">'], dots: t(a.data("owl-dots"), !1), responsive: t(a.data("owl-responsive"), {}) }) }), e(".count span").counterUp({ delay: 30, time: 2e3 }); var a = e(".popup-video"); a.length && a.magnificPopup({ type: "iframe" }), jQuery("img.svg").each(function () { var e = jQuery(this), t = e.attr("id"), a = e.attr("class"), o = e.attr("src"); jQuery.get(o, function (o) { var s = jQuery(o).find("svg"); void 0 !== t && (s = s.attr("id", t)), void 0 !== a && (s = s.attr("class", a + " replaced-svg")), !(s = s.removeAttr("xmlns:a")).attr("viewBox") && s.attr("height") && s.attr("width") && s.attr("viewBox", "0 0 " + s.attr("height") + " " + s.attr("width")), e.replaceWith(s) }, "xml") }); var o, s = e('[data-trigger="map"]'); s.length && (o = s.data("map-options"), window.initMap = function () { s.css("min-height", "600px"), s.each(function () { var t, a, s, n, r = e(this); o = r.data("map-options"), a = parseFloat(o.latitude, 10), s = parseFloat(o.longitude, 10), n = parseFloat(o.zoom, 10), t = new google.maps.Map(r[0], { center: { lat: a, lng: s }, zoom: n, scrollwheel: !1, disableDefaultUI: !0, zoomControl: !0, styles: [{ featureType: "all", elementType: "labels.text.fill", stylers: [{ saturation: 36 }, { color: "#000000" }, { lightness: 40 }] }, { featureType: "all", elementType: "labels.text.stroke", stylers: [{ visibility: "on" }, { color: "#000000" }, { lightness: 16 }] }, { featureType: "all", elementType: "labels.icon", stylers: [{ visibility: "off" }] }, { featureType: "administrative", elementType: "geometry.fill", stylers: [{ color: "#000000" }, { lightness: 20 }] }, { featureType: "administrative", elementType: "geometry.stroke", stylers: [{ color: "#000000" }, { lightness: 17 }, { weight: 1.2 }] }, { featureType: "landscape", elementType: "geometry", stylers: [{ color: "#000000" }, { lightness: 20 }] }, { featureType: "poi", elementType: "geometry", stylers: [{ color: "#000000" }, { lightness: 21 }] }, { featureType: "road.highway", elementType: "geometry.fill", stylers: [{ color: "#000000" }, { lightness: 17 }] }, { featureType: "road.highway", elementType: "geometry.stroke", stylers: [{ color: "#000000" }, { lightness: 29 }, { weight: .2 }] }, { featureType: "road.arterial", elementType: "geometry", stylers: [{ color: "#000000" }, { lightness: 18 }] }, { featureType: "road.local", elementType: "geometry", stylers: [{ color: "#000000" }, { lightness: 16 }] }, { featureType: "transit", elementType: "geometry", stylers: [{ color: "#000000" }, { lightness: 19 }] }, { featureType: "water", elementType: "geometry", stylers: [{ color: "#000000" }, { lightness: 17 }] }] }), t = new google.maps.Marker({ position: { lat: a, lng: s }, map: t, animation: google.maps.Animation.DROP, draggable: !1, icon: "assets/img/map-marker.png" }) }) }, initMap()), e(window).on("load", function () { e(".preloader").fadeOut(1e3) }), e(window).on("load", function () { e(".project-items").isotope({ itemSelector: ".grid-item", percentPosition: !0, animationOptions: { duration: 750, easing: "linear", queue: !1 }, masonry: { columnWidth: ".grid-item" } }), e(".project_filter li").on("click", function () { e(this).addClass("active").siblings().removeClass("active"); var t = e(this).attr("data-filter"); e(".grid").isotope({ filter: t }) }) }), e(".contact-form-wrapper").on("submit", "form", function (t) { t.preventDefault(); var a = e(this); e.post(a.attr("action"), a.serialize(), function (t) { t = e.parseJSON(t), a.parent(".contact-form-wrapper").find(".form-response").html("<span>" + t[1] + "</span>") }) }); var n = e(".back-to-top"); if (n.length) { var r = function () { e(window).scrollTop() > 400 ? n.addClass("show") : n.removeClass("show") }; r(), e(window).on("scroll", function () { r() }), n.on("click", function (t) { t.preventDefault(), e("html,body").animate({ scrollTop: 0 }, 700) }) } e("#countdown").countdown({ date: "08/16/2020 23:59:59" }) }(jQuery);